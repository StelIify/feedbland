// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: tokens.sql

package database

import (
	"context"
	"time"
)

const createToken = `-- name: CreateToken :exec
insert into tokens (hash, user_id, expiry, scope)
values ($1, $2, $3, $4)
`

type CreateTokenParams struct {
	Hash   []byte    `json:"hash"`
	UserID int64     `json:"user_id"`
	Expiry time.Time `json:"expiry"`
	Scope  string    `json:"scope"`
}

func (q *Queries) CreateToken(ctx context.Context, arg CreateTokenParams) error {
	_, err := q.db.Exec(ctx, createToken,
		arg.Hash,
		arg.UserID,
		arg.Expiry,
		arg.Scope,
	)
	return err
}

const deleteAllUserTokens = `-- name: DeleteAllUserTokens :exec
delete from tokens
where scope=$1 and user_id=$2
`

type DeleteAllUserTokensParams struct {
	Scope  string `json:"scope"`
	UserID int64  `json:"user_id"`
}

func (q *Queries) DeleteAllUserTokens(ctx context.Context, arg DeleteAllUserTokensParams) error {
	_, err := q.db.Exec(ctx, deleteAllUserTokens, arg.Scope, arg.UserID)
	return err
}
